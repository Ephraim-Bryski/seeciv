{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brisk\\\\OneDrive\\\\Documents\\\\GitHub\\\\seeciv\\\\my-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { addStyles, EditableMathField, StaticMathField } from \"react-mathquill\"; // inserts the required css to the <head> block.\n// you can skip this, if you want to do that by yourself.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naddStyles();\nconsole.log('hi');\n\nclass Sheet extends React.Component {\n  // constructor has states with sheet info?\n  constructor(props) {\n    super(props);\n    this.state = {\n      SoEs: [{\n        name: \"SoE 1\",\n        eqns: [{\n          eqn: \"x+4=5\",\n          operation: \"solve\",\n          solvefor: \"x\",\n          result: \"\" // this would be computed: x=1\n\n        }, {\n          eqn: \"a+3=b\",\n          operation: \"substitute\",\n          substitutefor: {\n            b: \"x\"\n          },\n          result: \"\" // this would be computed: a+3=x\n\n        }]\n      }, {\n        name: \"SoE 2\",\n        eqns: [{\n          eqn: \"SoE 1\",\n          operation: \"solve\",\n          solvefor: \"a\",\n          result: \"cool result!\" // this would be computed: a=x-3=1-3=-2 (not sure how many steps to show)\n\n        }]\n      }]\n    };\n  }\n\n  inputEqnUpdate(i, j, eqnStruct) {\n    this.state.SoEs[i].eqns[j] = eqnStruct;\n  }\n\n  render() {\n    var sheetElements = [];\n\n    for (let i = 0; i < this.state.SoEs.length; i++) {\n      var SoE = this.state.SoEs[i]; //this.SoEs[i].name=newName\n\n      sheetElements.push( /*#__PURE__*/_jsxDEV(Name, {\n        onEdit: newName => {\n          // updating one part of SoEs state (likely better approach):\n          this.state.SoEs[i].name = newName;\n          this.setState({\n            SoEs: [...this.state.SoEs]\n          });\n        },\n        text: SoE\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 29\n      }, this));\n\n      for (let j = 0; j < SoE.eqns.length; j++) {\n        sheetElements.push( /*#__PURE__*/_jsxDEV(Line, {\n          eqnStruct: SoE.eqns[j]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 33\n        }, this));\n      }\n    }\n\n    return sheetElements;\n  }\n\n}\n\nclass Name extends React.Component {\n  render() {\n    //const name=<tr><td></td></tr>\n    const editField = /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: this.props.text.name,\n      onChange: e => {\n        this.props.onEdit(e.target.value);\n        console.log(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 22\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: /*#__PURE__*/_jsxDEV(\"td\", {\n        children: editField\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass Line extends React.Component {\n  render() {\n    const eqnStruct = this.props.eqnStruct;\n\n    const line = /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: [/*#__PURE__*/_jsxDEV(EditableMathField, {\n          children: \"x+3=4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 14\n        }, this), eqnStruct.eqn]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: eqnStruct.result\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }, this);\n\n    return line;\n  }\n\n}\n\nexport default Sheet;\n\nconst EditableMathExample = () => {\n  _s();\n\n  const [latex, setLatex] = useState(\"\\\\frac{1}{\\\\sqrt{2}}\\\\cdot 2\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(EditableMathField, {\n      latex: latex,\n      onChange: mathField => {\n        setLatex(mathField.latex());\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: latex\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditableMathExample, \"T0BgquWIoL2psNq48NLRTlgeusQ=\");\n\n_c = EditableMathExample;\n\nconst StaticMathExample = () => {\n  return /*#__PURE__*/_jsxDEV(StaticMathField, {\n    children: \"\\\\frac{1}{\\\\sqrt{5}}\\\\cdot 2\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 10\n  }, this);\n};\n\n_c2 = StaticMathExample;\n\nconst Appp = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Editable Math Field\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(EditableMathExample, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Static Math Field\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(StaticMathExample, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 145,\n  columnNumber: 3\n}, this);\n\n_c3 = Appp;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"EditableMathExample\");\n$RefreshReg$(_c2, \"StaticMathExample\");\n$RefreshReg$(_c3, \"Appp\");","map":{"version":3,"sources":["C:/Users/brisk/OneDrive/Documents/GitHub/seeciv/my-app/src/App.js"],"names":["React","useState","addStyles","EditableMathField","StaticMathField","console","log","Sheet","Component","constructor","props","state","SoEs","name","eqns","eqn","operation","solvefor","result","substitutefor","b","inputEqnUpdate","i","j","eqnStruct","render","sheetElements","length","SoE","push","newName","setState","Name","editField","text","e","onEdit","target","value","Line","line","EditableMathExample","latex","setLatex","mathField","StaticMathExample","Appp"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,EAAoBC,iBAApB,EAAuCC,eAAvC,QAA8D,iBAA9D,C,CAEA;AACA;;;AACAF,SAAS;AACRG,OAAO,CAACC,GAAR,CAAY,IAAZ;;AACD,MAAMC,KAAN,SAAoBP,KAAK,CAACQ,SAA1B,CAAoC;AAClC;AACDC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAY;AACRC,MAAAA,IAAI,EAAC,CACL;AACIC,QAAAA,IAAI,EAAC,OADT;AAEIC,QAAAA,IAAI,EAAE,CACF;AACIC,UAAAA,GAAG,EAAC,OADR;AAEIC,UAAAA,SAAS,EAAE,OAFf;AAGIC,UAAAA,QAAQ,EAAE,GAHd;AAIIC,UAAAA,MAAM,EAAC,EAJX,CAIe;;AAJf,SADE,EAOF;AACIH,UAAAA,GAAG,EAAC,OADR;AAEIC,UAAAA,SAAS,EAAE,YAFf;AAGIG,UAAAA,aAAa,EAAE;AAACC,YAAAA,CAAC,EAAE;AAAJ,WAHnB;AAIIF,UAAAA,MAAM,EAAE,EAJZ,CAIe;;AAJf,SAPE;AAFV,OADK,EAkBL;AACIL,QAAAA,IAAI,EAAC,OADT;AAEIC,QAAAA,IAAI,EAAE,CACF;AACIC,UAAAA,GAAG,EAAC,OADR;AAEIC,UAAAA,SAAS,EAAE,OAFf;AAGIC,UAAAA,QAAQ,EAAE,GAHd;AAIIC,UAAAA,MAAM,EAAE,cAJZ,CAI4B;;AAJ5B,SADE;AAFV,OAlBK;AADG,KAAZ;AAgCH;;AAGDG,EAAAA,cAAc,CAACC,CAAD,EAAGC,CAAH,EAAKC,SAAL,EAAe;AAAC,SAAKb,KAAL,CAAWC,IAAX,CAAgBU,CAAhB,EAAmBR,IAAnB,CAAwBS,CAAxB,IAA2BC,SAA3B;AAAqC;;AAEnEC,EAAAA,MAAM,GAAE;AACJ,QAAIC,aAAa,GAAC,EAAlB;;AACA,SAAK,IAAIJ,CAAC,GAAC,CAAX,EAAaA,CAAC,GAAC,KAAKX,KAAL,CAAWC,IAAX,CAAgBe,MAA/B,EAAsCL,CAAC,EAAvC,EAA0C;AACtC,UAAIM,GAAG,GAAC,KAAKjB,KAAL,CAAWC,IAAX,CAAgBU,CAAhB,CAAR,CADsC,CAEtC;;AAEAI,MAAAA,aAAa,CAACG,IAAd,eAAmB,QAAC,IAAD;AAEf,QAAA,MAAM,EAAGC,OAAD,IACJ;AACI;AACA,eAAKnB,KAAL,CAAWC,IAAX,CAAgBU,CAAhB,EAAmBT,IAAnB,GAAwBiB,OAAxB;AACA,eAAKC,QAAL,CAAc;AAACnB,YAAAA,IAAI,EAAC,CAAC,GAAG,KAAKD,KAAL,CAAWC,IAAf;AAAN,WAAd;AACH,SAPU;AASf,QAAA,IAAI,EAAEgB;AATS;AAAA;AAAA;AAAA;AAAA,cAAnB;;AAcA,WAAK,IAAIL,CAAC,GAAC,CAAX,EAAaA,CAAC,GAACK,GAAG,CAACd,IAAJ,CAASa,MAAxB,EAA+BJ,CAAC,EAAhC,EAAmC;AAC/BG,QAAAA,aAAa,CAACG,IAAd,eAAmB,QAAC,IAAD;AAAM,UAAA,SAAS,EAAED,GAAG,CAACd,IAAJ,CAASS,CAAT;AAAjB;AAAA;AAAA;AAAA;AAAA,gBAAnB;AACH;AACJ;;AACD,WACIG,aADJ;AAIH;;AArEkC;;AAyEpC,MAAMM,IAAN,SAAmBhC,KAAK,CAACQ,SAAzB,CAAmC;AAElCiB,EAAAA,MAAM,GAAE;AAEJ;AACA,UAAMQ,SAAS,gBAAC;AACZ,MAAA,IAAI,EAAC,MADO;AAEZ,MAAA,KAAK,EAAE,KAAKvB,KAAL,CAAWwB,IAAX,CAAgBrB,IAFX;AAGZ,MAAA,QAAQ,EAAGsB,CAAD,IAAK;AAAC,aAAKzB,KAAL,CAAW0B,MAAX,CAAmBD,CAAC,CAACE,MAAF,CAASC,KAA5B;AACZjC,QAAAA,OAAO,CAACC,GAAR,CAAY6B,CAAC,CAACE,MAAF,CAASC,KAArB;AAEH;AANW;AAAA;AAAA;AAAA;AAAA,YAAhB;;AAYA,wBAAO;AAAA,6BAAI;AAAA,kBAAKL;AAAL;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAlBiC;;AAqBnC,MAAMM,IAAN,SAAmBvC,KAAK,CAACQ,SAAzB,CAAmC;AAClCiB,EAAAA,MAAM,GAAG;AACL,UAAMD,SAAS,GAAC,KAAKd,KAAL,CAAWc,SAA3B;;AACA,UAAMgB,IAAI,gBAAC;AAAA,8BACP;AAAA,gCACI,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEKhB,SAAS,CAACT,GAFf;AAAA;AAAA;AAAA;AAAA;AAAA,cADO,eAKP;AAAA,kBACKS,SAAS,CAACN;AADf;AAAA;AAAA;AAAA;AAAA,cALO;AAAA;AAAA;AAAA;AAAA;AAAA,YAAX;;AASA,WAAOsB,IAAP;AACH;;AAbiC;;AAgBnC,eAAejC,KAAf;;AAMA,MAAMkC,mBAAmB,GAAG,MAAM;AAAA;;AAChC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoB1C,QAAQ,CAAC,8BAAD,CAAlC;AAEA,sBACE;AAAA,4BACE,QAAC,iBAAD;AACE,MAAA,KAAK,EAAEyC,KADT;AAEE,MAAA,QAAQ,EAAGE,SAAD,IAAe;AACvBD,QAAAA,QAAQ,CAACC,SAAS,CAACF,KAAV,EAAD,CAAR;AACD;AAJH;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AAAA,gBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAdD;;GAAMD,mB;;KAAAA,mB;;AAgBN,MAAMI,iBAAiB,GAAG,MAAM;AAC9B,sBAAO,QAAC,eAAD;AAAA,cAAkB;AAAlB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFD;;MAAMA,iB;;AAIN,MAAMC,IAAI,GAAG,mBACX;AAAA,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,eAEE,QAAC,mBAAD;AAAA;AAAA;AAAA;AAAA,UAFF,eAGE;AAAA;AAAA;AAAA;AAAA,UAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJF,eAKE,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,UALF;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;;MAAMA,I","sourcesContent":["import React, { useState } from \"react\";\nimport { addStyles, EditableMathField, StaticMathField } from \"react-mathquill\";\n\n// inserts the required css to the <head> block.\n// you can skip this, if you want to do that by yourself.\naddStyles();\n console.log('hi')\nclass Sheet extends React.Component {\n  // constructor has states with sheet info?\n constructor(props){\n     super(props)\n     this.state= {\n         SoEs:[\n         {\n             name:\"SoE 1\",\n             eqns: [\n                 {\n                     eqn:\"x+4=5\",\n                     operation: \"solve\",\n                     solvefor: \"x\",\n                     result:\"\", // this would be computed: x=1\n                 },\n                 {\n                     eqn:\"a+3=b\",\n                     operation: \"substitute\",\n                     substitutefor: {b: \"x\"},\n                     result: \"\" // this would be computed: a+3=x\n                 }\n             ]\n         },\n         {\n             name:\"SoE 2\",\n             eqns: [\n                 {\n                     eqn:\"SoE 1\",\n                     operation: \"solve\",\n                     solvefor: \"a\",\n                     result: \"cool result!\", // this would be computed: a=x-3=1-3=-2 (not sure how many steps to show)\n                 },\n             ]\n         }\n     ]\n     }\n }\n\n\n inputEqnUpdate(i,j,eqnStruct){this.state.SoEs[i].eqns[j]=eqnStruct}\n\n render(){\n     var sheetElements=[]\n     for (let i=0;i<this.state.SoEs.length;i++){\n         var SoE=this.state.SoEs[i]\n         //this.SoEs[i].name=newName\n\n         sheetElements.push(<Name \n         \n             onEdit={(newName)=>\n                 {\n                     // updating one part of SoEs state (likely better approach):\n                     this.state.SoEs[i].name=newName\n                     this.setState({SoEs:[...this.state.SoEs]})\n                 }\n             } \n             text={SoE}\n         />)\n\n         \n\n         for (let j=0;j<SoE.eqns.length;j++){\n             sheetElements.push(<Line eqnStruct={SoE.eqns[j]}/>)\n         }\n     }\n     return(\n         sheetElements\n     )\n \n }\n}\n\n\nclass Name extends React.Component {\n \n render(){\n\n     //const name=<tr><td></td></tr>\n     const editField=<input \n         type=\"text\" \n         value={this.props.text.name} \n         onChange={(e)=>{this.props.onEdit( e.target.value)\n             console.log(e.target.value\n             )\n         }\n         \n     }\n     >\n     </input>\n\n     return <tr><td>{editField}</td></tr>\n } \n}\n\nclass Line extends React.Component { \n render() {\n     const eqnStruct=this.props.eqnStruct\n     const line=<tr>\n         <td>\n             <EditableMathField>x+3=4</EditableMathField>\n             {eqnStruct.eqn}\n         </td>\n         <td>\n             {eqnStruct.result}\n         </td>\n     </tr>\n     return line\n }\n}\n\nexport default Sheet\n\n\n\n\n\nconst EditableMathExample = () => {\n  const [latex, setLatex] = useState(\"\\\\frac{1}{\\\\sqrt{2}}\\\\cdot 2\");\n\n  return (\n    <div>\n      <EditableMathField\n        latex={latex}\n        onChange={(mathField) => {\n          setLatex(mathField.latex());\n        }}\n      />\n      <p>{latex}</p>\n    </div>\n  );\n}; \n\nconst StaticMathExample = () => {\n  return <StaticMathField>{\"\\\\frac{1}{\\\\sqrt{5}}\\\\cdot 2\"}</StaticMathField>;\n};\n\nconst Appp = () => (\n  <div>\n    <h2>Editable Math Field</h2>\n    <EditableMathExample />\n    <br />\n    <h2>Static Math Field</h2>\n    <StaticMathExample />\n  </div>\n);\n\n"]},"metadata":{},"sourceType":"module"}